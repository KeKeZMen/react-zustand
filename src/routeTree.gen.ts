/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './pages/__root'
import { Route as siteIndexImport } from './pages/(site)/index'
import { Route as siteTodosIndexImport } from './pages/(site)/todos/index'
import { Route as siteTodosIdIndexImport } from './pages/(site)/todos/$id/index'

// Create/Update Routes

const siteIndexRoute = siteIndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const siteTodosIndexRoute = siteTodosIndexImport.update({
  path: '/todos/',
  getParentRoute: () => rootRoute,
} as any)

const siteTodosIdIndexRoute = siteTodosIdIndexImport.update({
  path: '/todos/$id/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/(site)/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof siteIndexImport
      parentRoute: typeof rootRoute
    }
    '/(site)/todos/': {
      id: '/todos/'
      path: '/todos'
      fullPath: '/todos'
      preLoaderRoute: typeof siteTodosIndexImport
      parentRoute: typeof rootRoute
    }
    '/(site)/todos/$id/': {
      id: '/todos/$id/'
      path: '/todos/$id'
      fullPath: '/todos/$id'
      preLoaderRoute: typeof siteTodosIdIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof siteIndexRoute
  '/todos': typeof siteTodosIndexRoute
  '/todos/$id': typeof siteTodosIdIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof siteIndexRoute
  '/todos': typeof siteTodosIndexRoute
  '/todos/$id': typeof siteTodosIdIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof siteIndexRoute
  '/todos/': typeof siteTodosIndexRoute
  '/todos/$id/': typeof siteTodosIdIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/todos' | '/todos/$id'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/todos' | '/todos/$id'
  id: '__root__' | '/' | '/todos/' | '/todos/$id/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  siteIndexRoute: typeof siteIndexRoute
  siteTodosIndexRoute: typeof siteTodosIndexRoute
  siteTodosIdIndexRoute: typeof siteTodosIdIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  siteIndexRoute: siteIndexRoute,
  siteTodosIndexRoute: siteTodosIndexRoute,
  siteTodosIdIndexRoute: siteTodosIdIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/todos/",
        "/todos/$id/"
      ]
    },
    "/": {
      "filePath": "(site)/index.tsx"
    },
    "/todos/": {
      "filePath": "(site)/todos/index.tsx"
    },
    "/todos/$id/": {
      "filePath": "(site)/todos/$id/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
